<?xml version="1.0" encoding="UTF-8"?>
<neuroml xmlns="http://www.neuroml.org/schema/neuroml2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.neuroml.org/schema/neuroml2 https://raw.github.com/NeuroML/NeuroML2/development/Schemas/NeuroML2/NeuroML_v2beta4.xsd"
    id = "NeuroML2_file_exported_from_NEURON">

    
    <include href="../channels/HCNp.channel.nml"/> 
    <include href="../channels/Kdrp.channel.nml"/> 
    <include href="../channels/KvAproxp.channel.nml"/> 
    <include href="../channels/KvAdistp.channel.nml"/>
    <include href="../channels/Navp.channel.nml"/>
    <include href="../channels/leak_chan.channel.nml"/>

    
  <cell id="cutsuridiscell">
    <notes>Cell: cutsuridiscell exported from NEURON ModelView</notes>
    <morphology id="morphology">
<!-- Section: cutsuridiscell[0].soma[0] (segmentGroup: soma_0) which has 3 3D points, so 2 segment(s)-->
      <segment id="0" name = "Seg0_soma_0">
        <proximal x="0" y="0" z="0" diameter="10"/>
        <distal x="0" y="5" z="0" diameter="10"/>
      </segment>
      <segment id="2" name = "Seg1_soma_0">
        <parent segment="0"/>
        <distal x="0" y="10" z="0" diameter="10"/>
      </segment>
<!-- Section: cutsuridiscell[0].axon[0] (segmentGroup: axon_0) which has 3 3D points, so 2 segment(s)-->
      <segment id="29" name = "Seg0_axon_0">  <!-- Connected at 0 on parent section: cutsuridiscell[0].soma[0]  -->
        <parent segment="0" fractionAlong="0"/>
        <proximal x="0" y="0" z="0" diameter="1"/>
        <distal x="0" y="-75" z="0" diameter="1"/>
      </segment>
      <segment id="30" name = "Seg1_axon_0">
        <parent segment="29"/>
        <distal x="0" y="-150" z="0" diameter="1"/>
      </segment>
<!-- Section: cutsuridiscell[0].basal[2] (segmentGroup: basal_2) which has 3 3D points, so 2 segment(s)-->
      <segment id="25" name = "Seg0_basal_2">  <!-- Connected at 0 on parent section: cutsuridiscell[0].soma[0]  -->
        <parent segment="0" fractionAlong="0"/>
        <proximal x="0" y="0" z="0" diameter="2"/>
        <distal x="-35.5" y="-35.5" z="0" diameter="2"/>
      </segment>
      <segment id="26" name = "Seg1_basal_2">
        <parent segment="25"/>
        <distal x="-71" y="-71" z="0" diameter="2"/>
      </segment>
<!-- Section: cutsuridiscell[0].basal[0] (segmentGroup: basal_0) which has 3 3D points, so 2 segment(s)-->
      <segment id="21" name = "Seg0_basal_0">  <!-- Connected at 0 on parent section: cutsuridiscell[0].soma[0]  -->
        <parent segment="0" fractionAlong="0"/>
        <proximal x="0" y="0" z="0" diameter="2"/>
        <distal x="35.5" y="-35.5" z="0" diameter="2"/>
      </segment>
      <segment id="22" name = "Seg1_basal_0">
        <parent segment="21"/>
        <distal x="71" y="-71" z="0" diameter="2"/>
      </segment>
<!-- Section: cutsuridiscell[0].apical[0] (segmentGroup: apical_0) which has 3 3D points, so 2 segment(s)-->
      <segment id="3" name = "Seg0_apical_0">
        <parent segment="2"/>
        <proximal x="0" y="10" z="0" diameter="4"/>
        <distal x="0" y="60" z="0" diameter="4"/>
      </segment>
      <segment id="4" name = "Seg1_apical_0">
        <parent segment="3"/>
        <distal x="0" y="110" z="0" diameter="4"/>
      </segment>
<!-- Section: cutsuridiscell[0].basal[3] (segmentGroup: basal_3) which has 3 3D points, so 2 segment(s)-->
      <segment id="27" name = "Seg0_basal_3">
        <parent segment="26"/>
        <proximal x="-71" y="-71" z="0" diameter="1.5"/>
        <distal x="-142" y="-142" z="0" diameter="1.5"/>
      </segment>
      <segment id="28" name = "Seg1_basal_3">
        <parent segment="27"/>
        <distal x="-212.4" y="-212.4" z="0" diameter="1.5"/>
      </segment>
<!-- Section: cutsuridiscell[0].basal[1] (segmentGroup: basal_1) which has 3 3D points, so 2 segment(s)-->
      <segment id="23" name = "Seg0_basal_1">
        <parent segment="22"/>
        <proximal x="71" y="-71" z="0" diameter="1.5"/>
        <distal x="142" y="-142" z="0" diameter="1.5"/>
      </segment>
      <segment id="24" name = "Seg1_basal_1">
        <parent segment="23"/>
        <distal x="212.4" y="-212.4" z="0" diameter="1.5"/>
      </segment>
<!-- Section: cutsuridiscell[0].apical[1] (segmentGroup: apical_1) which has 3 3D points, so 2 segment(s)-->
      <segment id="5" name = "Seg0_apical_1">
        <parent segment="4"/>
        <proximal x="0" y="110" z="0" diameter="3"/>
        <distal x="0" y="160" z="0" diameter="3"/>
      </segment>
      <segment id="6" name = "Seg1_apical_1">
        <parent segment="5"/>
        <distal x="0" y="210" z="0" diameter="3"/>
      </segment>
<!-- Section: cutsuridiscell[0].apical[2] (segmentGroup: apical_2) which has 3 3D points, so 2 segment(s)-->
      <segment id="7" name = "Seg0_apical_2">
        <parent segment="6"/>
        <proximal x="0" y="210" z="0" diameter="2"/>
        <distal x="0" y="310" z="0" diameter="2"/>
      </segment>
      <segment id="8" name = "Seg1_apical_2">
        <parent segment="7"/>
        <distal x="0" y="410" z="0" diameter="2"/>
      </segment>
<!-- Section: cutsuridiscell[0].apical[6] (segmentGroup: apical_6) which has 3 3D points, so 2 segment(s)-->
      <segment id="15" name = "Seg0_apical_6">
        <parent segment="8"/>
        <proximal x="0" y="410" z="0" diameter="2"/>
        <distal x="-35.5" y="445.5" z="0" diameter="2"/>
      </segment>
      <segment id="16" name = "Seg1_apical_6">
        <parent segment="15"/>
        <distal x="-71" y="481" z="0" diameter="2"/>
      </segment>
<!-- Section: cutsuridiscell[0].apical[3] (segmentGroup: apical_3) which has 3 3D points, so 2 segment(s)-->
      <segment id="9" name = "Seg0_apical_3">
        <parent segment="8"/>
        <proximal x="0" y="410" z="0" diameter="2"/>
        <distal x="35.5" y="445.5" z="0" diameter="2"/>
      </segment>
      <segment id="10" name = "Seg1_apical_3">
        <parent segment="9"/>
        <distal x="71" y="481" z="0" diameter="2"/>
      </segment>
<!-- Section: cutsuridiscell[0].apical[7] (segmentGroup: apical_7) which has 3 3D points, so 2 segment(s)-->
      <segment id="17" name = "Seg0_apical_7">
        <parent segment="16"/>
        <proximal x="-71" y="481" z="0" diameter="1.5"/>
        <distal x="-106.5" y="516.5" z="0" diameter="1.5"/>
      </segment>
      <segment id="18" name = "Seg1_apical_7">
        <parent segment="17"/>
        <distal x="-142" y="552" z="0" diameter="1.5"/>
      </segment>
<!-- Section: cutsuridiscell[0].apical[4] (segmentGroup: apical_4) which has 3 3D points, so 2 segment(s)-->
      <segment id="11" name = "Seg0_apical_4">
        <parent segment="10"/>
        <proximal x="71" y="481" z="0" diameter="1.5"/>
        <distal x="106.5" y="516.5" z="0" diameter="1.5"/>
      </segment>
      <segment id="12" name = "Seg1_apical_4">
        <parent segment="11"/>
        <distal x="142" y="552" z="0" diameter="1.5"/>
      </segment>
<!-- Section: cutsuridiscell[0].apical[8] (segmentGroup: apical_8) which has 3 3D points, so 2 segment(s)-->
      <segment id="19" name = "Seg0_apical_8">
        <parent segment="18"/>
        <proximal x="-142" y="552" z="0" diameter="1"/>
        <distal x="-159.7" y="569.7" z="0" diameter="1"/>
      </segment>
      <segment id="20" name = "Seg1_apical_8">
        <parent segment="19"/>
        <distal x="-177.4" y="587.4" z="0" diameter="1"/>
      </segment>
<!-- Section: cutsuridiscell[0].apical[5] (segmentGroup: apical_5) which has 3 3D points, so 2 segment(s)-->
      <segment id="13" name = "Seg0_apical_5">
        <parent segment="12"/>
        <proximal x="142" y="552" z="0" diameter="1"/>
        <distal x="159.7" y="569.7" z="0" diameter="1"/>
      </segment>
      <segment id="14" name = "Seg1_apical_5">
        <parent segment="13"/>
        <distal x="177.4" y="587.4" z="0" diameter="1"/>
      </segment>

<!-- Section: cutsuridiscell[0].soma[0] (segmentGroup: soma_0) which has 3 3D points, so 2 segment(s)-->

      <segmentGroup id = "soma_0"  neuroLexId="sao864921383">
         <notes>This group contains an unbranched set of segments, and all of the segmentGroups marked with
             neuroLexId = sao864921383 form a non-overlapping set of all of the segments.
             These segmentGroups correspond to the 'cables' of NeuroML v1.8.1, and map to/from NEURON sections.</notes>
        <member segment = "0"/>
        <member segment = "2"/>
      </segmentGroup>


<!-- Section: cutsuridiscell[0].axon[0] (segmentGroup: axon_0) which has 3 3D points, so 2 segment(s)-->

      <segmentGroup id = "axon_0"  neuroLexId="sao864921383">
         <notes>This group contains an unbranched set of segments, and all of the segmentGroups marked with
             neuroLexId = sao864921383 form a non-overlapping set of all of the segments.
             These segmentGroups correspond to the 'cables' of NeuroML v1.8.1, and map to/from NEURON sections.</notes>
        <!-- This is currently inside (old convention) & outside (new convention) the <annotation> element, as some APIs have trouble reading what's inside <annotation> (<xs:any..> in Schema) -->
        <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        <annotation>
          <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        </annotation>
        <member segment = "29"/>
        <member segment = "30"/>
      </segmentGroup>


<!-- Section: cutsuridiscell[0].basal[2] (segmentGroup: basal_2) which has 3 3D points, so 2 segment(s)-->

      <segmentGroup id = "basal_2"  neuroLexId="sao864921383">
         <notes>This group contains an unbranched set of segments, and all of the segmentGroups marked with
             neuroLexId = sao864921383 form a non-overlapping set of all of the segments.
             These segmentGroups correspond to the 'cables' of NeuroML v1.8.1, and map to/from NEURON sections.</notes>
        <!-- This is currently inside (old convention) & outside (new convention) the <annotation> element, as some APIs have trouble reading what's inside <annotation> (<xs:any..> in Schema) -->
        <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        <annotation>
          <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        </annotation>
        <member segment = "25"/>
        <member segment = "26"/>
      </segmentGroup>


<!-- Section: cutsuridiscell[0].basal[0] (segmentGroup: basal_0) which has 3 3D points, so 2 segment(s)-->

      <segmentGroup id = "basal_0"  neuroLexId="sao864921383">
         <notes>This group contains an unbranched set of segments, and all of the segmentGroups marked with
             neuroLexId = sao864921383 form a non-overlapping set of all of the segments.
             These segmentGroups correspond to the 'cables' of NeuroML v1.8.1, and map to/from NEURON sections.</notes>
        <!-- This is currently inside (old convention) & outside (new convention) the <annotation> element, as some APIs have trouble reading what's inside <annotation> (<xs:any..> in Schema) -->
        <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        <annotation>
          <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        </annotation>
        <member segment = "21"/>
        <member segment = "22"/>
      </segmentGroup>


<!-- Section: cutsuridiscell[0].apical[0] (segmentGroup: apical_0) which has 3 3D points, so 2 segment(s)-->

      <segmentGroup id = "apical_0"  neuroLexId="sao864921383">
         <notes>This group contains an unbranched set of segments, and all of the segmentGroups marked with
             neuroLexId = sao864921383 form a non-overlapping set of all of the segments.
             These segmentGroups correspond to the 'cables' of NeuroML v1.8.1, and map to/from NEURON sections.</notes>
        <!-- This is currently inside (old convention) & outside (new convention) the <annotation> element, as some APIs have trouble reading what's inside <annotation> (<xs:any..> in Schema) -->
        <property tag="numberInternalDivisions" value="3"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        <annotation>
          <property tag="numberInternalDivisions" value="3"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        </annotation>
        <member segment = "3"/>
        <member segment = "4"/>
      </segmentGroup>


<!-- Section: cutsuridiscell[0].basal[3] (segmentGroup: basal_3) which has 3 3D points, so 2 segment(s)-->

      <segmentGroup id = "basal_3"  neuroLexId="sao864921383">
         <notes>This group contains an unbranched set of segments, and all of the segmentGroups marked with
             neuroLexId = sao864921383 form a non-overlapping set of all of the segments.
             These segmentGroups correspond to the 'cables' of NeuroML v1.8.1, and map to/from NEURON sections.</notes>
        <!-- This is currently inside (old convention) & outside (new convention) the <annotation> element, as some APIs have trouble reading what's inside <annotation> (<xs:any..> in Schema) -->
        <property tag="numberInternalDivisions" value="11"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        <annotation>
          <property tag="numberInternalDivisions" value="11"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        </annotation>
        <member segment = "27"/>
        <member segment = "28"/>
      </segmentGroup>


<!-- Section: cutsuridiscell[0].basal[1] (segmentGroup: basal_1) which has 3 3D points, so 2 segment(s)-->

      <segmentGroup id = "basal_1"  neuroLexId="sao864921383">
         <notes>This group contains an unbranched set of segments, and all of the segmentGroups marked with
             neuroLexId = sao864921383 form a non-overlapping set of all of the segments.
             These segmentGroups correspond to the 'cables' of NeuroML v1.8.1, and map to/from NEURON sections.</notes>
        <!-- This is currently inside (old convention) & outside (new convention) the <annotation> element, as some APIs have trouble reading what's inside <annotation> (<xs:any..> in Schema) -->
        <property tag="numberInternalDivisions" value="11"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        <annotation>
          <property tag="numberInternalDivisions" value="11"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        </annotation>
        <member segment = "23"/>
        <member segment = "24"/>
      </segmentGroup>


<!-- Section: cutsuridiscell[0].apical[1] (segmentGroup: apical_1) which has 3 3D points, so 2 segment(s)-->

      <segmentGroup id = "apical_1"  neuroLexId="sao864921383">
         <notes>This group contains an unbranched set of segments, and all of the segmentGroups marked with
             neuroLexId = sao864921383 form a non-overlapping set of all of the segments.
             These segmentGroups correspond to the 'cables' of NeuroML v1.8.1, and map to/from NEURON sections.</notes>
        <!-- This is currently inside (old convention) & outside (new convention) the <annotation> element, as some APIs have trouble reading what's inside <annotation> (<xs:any..> in Schema) -->
        <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        <annotation>
          <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        </annotation>
        <member segment = "5"/>
        <member segment = "6"/>
      </segmentGroup>


<!-- Section: cutsuridiscell[0].apical[2] (segmentGroup: apical_2) which has 3 3D points, so 2 segment(s)-->

      <segmentGroup id = "apical_2"  neuroLexId="sao864921383">
         <notes>This group contains an unbranched set of segments, and all of the segmentGroups marked with
             neuroLexId = sao864921383 form a non-overlapping set of all of the segments.
             These segmentGroups correspond to the 'cables' of NeuroML v1.8.1, and map to/from NEURON sections.</notes>
        <!-- This is currently inside (old convention) & outside (new convention) the <annotation> element, as some APIs have trouble reading what's inside <annotation> (<xs:any..> in Schema) -->
        <property tag="numberInternalDivisions" value="9"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        <annotation>
          <property tag="numberInternalDivisions" value="9"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        </annotation>
        <member segment = "7"/>
        <member segment = "8"/>
      </segmentGroup>


<!-- Section: cutsuridiscell[0].apical[6] (segmentGroup: apical_6) which has 3 3D points, so 2 segment(s)-->

      <segmentGroup id = "apical_6"  neuroLexId="sao864921383">
         <notes>This group contains an unbranched set of segments, and all of the segmentGroups marked with
             neuroLexId = sao864921383 form a non-overlapping set of all of the segments.
             These segmentGroups correspond to the 'cables' of NeuroML v1.8.1, and map to/from NEURON sections.</notes>
        <!-- This is currently inside (old convention) & outside (new convention) the <annotation> element, as some APIs have trouble reading what's inside <annotation> (<xs:any..> in Schema) -->
        <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        <annotation>
          <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        </annotation>
        <member segment = "15"/>
        <member segment = "16"/>
      </segmentGroup>


<!-- Section: cutsuridiscell[0].apical[3] (segmentGroup: apical_3) which has 3 3D points, so 2 segment(s)-->

      <segmentGroup id = "apical_3"  neuroLexId="sao864921383">
         <notes>This group contains an unbranched set of segments, and all of the segmentGroups marked with
             neuroLexId = sao864921383 form a non-overlapping set of all of the segments.
             These segmentGroups correspond to the 'cables' of NeuroML v1.8.1, and map to/from NEURON sections.</notes>
        <!-- This is currently inside (old convention) & outside (new convention) the <annotation> element, as some APIs have trouble reading what's inside <annotation> (<xs:any..> in Schema) -->
        <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        <annotation>
          <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        </annotation>
        <member segment = "9"/>
        <member segment = "10"/>
      </segmentGroup>


<!-- Section: cutsuridiscell[0].apical[7] (segmentGroup: apical_7) which has 3 3D points, so 2 segment(s)-->

      <segmentGroup id = "apical_7"  neuroLexId="sao864921383">
         <notes>This group contains an unbranched set of segments, and all of the segmentGroups marked with
             neuroLexId = sao864921383 form a non-overlapping set of all of the segments.
             These segmentGroups correspond to the 'cables' of NeuroML v1.8.1, and map to/from NEURON sections.</notes>
        <!-- This is currently inside (old convention) & outside (new convention) the <annotation> element, as some APIs have trouble reading what's inside <annotation> (<xs:any..> in Schema) -->
        <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        <annotation>
          <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        </annotation>
        <member segment = "17"/>
        <member segment = "18"/>
      </segmentGroup>


<!-- Section: cutsuridiscell[0].apical[4] (segmentGroup: apical_4) which has 3 3D points, so 2 segment(s)-->

      <segmentGroup id = "apical_4"  neuroLexId="sao864921383">
         <notes>This group contains an unbranched set of segments, and all of the segmentGroups marked with
             neuroLexId = sao864921383 form a non-overlapping set of all of the segments.
             These segmentGroups correspond to the 'cables' of NeuroML v1.8.1, and map to/from NEURON sections.</notes>
        <!-- This is currently inside (old convention) & outside (new convention) the <annotation> element, as some APIs have trouble reading what's inside <annotation> (<xs:any..> in Schema) -->
        <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        <annotation>
          <property tag="numberInternalDivisions" value="5"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        </annotation>
        <member segment = "11"/>
        <member segment = "12"/>
      </segmentGroup>


<!-- Section: cutsuridiscell[0].apical[8] (segmentGroup: apical_8) which has 3 3D points, so 2 segment(s)-->

      <segmentGroup id = "apical_8"  neuroLexId="sao864921383">
         <notes>This group contains an unbranched set of segments, and all of the segmentGroups marked with
             neuroLexId = sao864921383 form a non-overlapping set of all of the segments.
             These segmentGroups correspond to the 'cables' of NeuroML v1.8.1, and map to/from NEURON sections.</notes>
        <!-- This is currently inside (old convention) & outside (new convention) the <annotation> element, as some APIs have trouble reading what's inside <annotation> (<xs:any..> in Schema) -->
        <property tag="numberInternalDivisions" value="3"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        <annotation>
          <property tag="numberInternalDivisions" value="3"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        </annotation>
        <member segment = "19"/>
        <member segment = "20"/>
      </segmentGroup>


<!-- Section: cutsuridiscell[0].apical[5] (segmentGroup: apical_5) which has 3 3D points, so 2 segment(s)-->

      <segmentGroup id = "apical_5"  neuroLexId="sao864921383">
         <notes>This group contains an unbranched set of segments, and all of the segmentGroups marked with
             neuroLexId = sao864921383 form a non-overlapping set of all of the segments.
             These segmentGroups correspond to the 'cables' of NeuroML v1.8.1, and map to/from NEURON sections.</notes>
        <!-- This is currently inside (old convention) & outside (new convention) the <annotation> element, as some APIs have trouble reading what's inside <annotation> (<xs:any..> in Schema) -->
        <property tag="numberInternalDivisions" value="3"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        <annotation>
          <property tag="numberInternalDivisions" value="3"/> <!-- Discretization of model at time of export from NEURON. Can be overridden by importing application -->
        </annotation>
        <member segment = "13"/>
        <member segment = "14"/>
      </segmentGroup>


      <segmentGroup id="all"> <!-- Replacing subset name ModelViewParmSubset_0 with all, as it contains all sections -->
        <include segmentGroup = "soma_0"/>
        <include segmentGroup = "basal_0"/>
        <include segmentGroup = "basal_1"/>
        <include segmentGroup = "basal_2"/>
        <include segmentGroup = "basal_3"/>
        <include segmentGroup = "apical_0"/>
        <include segmentGroup = "apical_1"/>
        <include segmentGroup = "apical_2"/>
        <include segmentGroup = "apical_3"/>
        <include segmentGroup = "apical_4"/>
        <include segmentGroup = "apical_5"/>
        <include segmentGroup = "apical_6"/>
        <include segmentGroup = "apical_7"/>
        <include segmentGroup = "apical_8"/>
        <include segmentGroup = "axon_0"/>
      </segmentGroup>
      
      <segmentGroup id="soma_group"> 
        <include segmentGroup = "soma_0"/>
      </segmentGroup>
      
      <segmentGroup id="dendrite_group"> 
        <include segmentGroup = "basal_0"/>
        <include segmentGroup = "basal_1"/>
        <include segmentGroup = "basal_2"/>
        <include segmentGroup = "basal_3"/>
        <include segmentGroup = "apical_0"/>
        <include segmentGroup = "apical_1"/>
        <include segmentGroup = "apical_2"/>
        <include segmentGroup = "apical_3"/>
        <include segmentGroup = "apical_4"/>
        <include segmentGroup = "apical_5"/>
        <include segmentGroup = "apical_6"/>
        <include segmentGroup = "apical_7"/>
        <include segmentGroup = "apical_8"/>
      </segmentGroup>
    
      <segmentGroup id="basal_group"> 
        <include segmentGroup = "basal_0"/>
        <include segmentGroup = "basal_1"/>
        <include segmentGroup = "basal_2"/>
        <include segmentGroup = "basal_3"/>
      </segmentGroup>
      
      <segmentGroup id="apical_group"> 
        <include segmentGroup = "apical_0"/>
        <include segmentGroup = "apical_1"/>
        <include segmentGroup = "apical_2"/>
        <include segmentGroup = "apical_3"/>
        <include segmentGroup = "apical_4"/>
        <include segmentGroup = "apical_5"/>
        <include segmentGroup = "apical_6"/>
        <include segmentGroup = "apical_7"/>
        <include segmentGroup = "apical_8"/>
        
        <inhomogeneousParameter id="PathLengthOverDendrites" variable="p" metric="Path Length from root" distal="translationStart">
        </inhomogeneousParameter>       
      </segmentGroup>
      
      <segmentGroup id="axon_group"> 
        <include segmentGroup = "axon_0"/>
      </segmentGroup>

    </morphology>

    <!-- Biophysical properties -->

    <biophysicalProperties id="biophys"> 

      <membraneProperties>
        <channelDensity ionChannel="HCNsomap" id="HCNsomap_soma" condDensity="0.6mS_per_cm2" segmentGroup="soma_group" erev="-30mV" ion="non_specific"/>
        <channelDensity ionChannel="Kdrp" id="Kdrp_soma" condDensity="3mS_per_cm2" segmentGroup="soma_group" erev="-90mV" ion="k"/>
        <channelDensity ionChannel="Kdrp" id="Kdrp_basal" condDensity="3mS_per_cm2" segmentGroup="basal_group" erev="-90mV" ion="k"/>
        <channelDensity ionChannel="Kdrp" id="Kdrp_axon" condDensity="3mS_per_cm2" segmentGroup="axon_group" erev="-90mV" ion="k"/>
        <channelDensity ionChannel="KvAproxp" id="KvAproxp_soma" condDensity="8mS_per_cm2" segmentGroup="soma_group" erev="-90mV" ion="k"/>
        <channelDensity ionChannel="KvAproxp" id="KvAproxp_basal" condDensity="8mS_per_cm2" segmentGroup="basal_group" erev="-90mV" ion="k"/>
        <channelDensity ionChannel="KvAproxp" id="KvAproxp_axon" condDensity="1.6mS_per_cm2" segmentGroup="axon_group" erev="-90mV" ion="k"/>
        <channelDensity ionChannel="Navp" id="Nav_soma" condDensity="32mS_per_cm2" segmentGroup="soma_group" erev="55mV" ion="na"/>
        <channelDensity ionChannel="Navp" id="Navp_basal" condDensity="32mS_per_cm2" segmentGroup="basal_group" erev="55mV" ion="na"/>      
        <channelDensity ionChannel="leak_chan" id="leak_soma" condDensity="0.03571428571428572mS_per_cm2" segmentGroup="soma_group" erev="-66mV" ion="non_specific"/>
        <channelDensity ionChannel="leak_chan" id="leak_dendrite" condDensity="0.07142857142857144mS_per_cm2" segmentGroup="dendrite_group" erev="-66mV" ion="non_specific"/>
        <channelDensity ionChannel="leak_chan" id="leak_axon" condDensity="0.03571428571428572mS_per_cm2" segmentGroup="axon_group" erev="-66mV" ion="non_specific"/>
        <!-- HCNsomap with param: gmax = f(p) = H(100 - p) * 0.6 * (1 + 1.5*p/100) mS/cm2 on ParameterisedGroup: PathLengthOverDendrites on: dendrite_group with metric: Path Length from root (NO_TRANSLATION, NO_NORMALISATION), var: p-->
        <channelDensityNonUniform ionChannel="HCNsomap" id="HCNsomap_apical" erev="-30mV" ion="non_specific">
            <variableParameter parameter="condDensity" segmentGroup="apical_group">   
                <inhomogeneousValue inhomogeneousParameter="PathLengthOverDendrites" value="H(100 - p) * 6 * (1 + 1.5*p/100)"/> 
            </variableParameter>
        </channelDensityNonUniform>
        <!-- HCNp with param: gmax = f(p) = H(500 - p) * H(p - 100) * 0.6 * (1 + 1.5*p/100) mS/cm2 on ParameterisedGroup: PathLengthOverDendrites on: dendrite_group with metric: Path Length from root (NO_TRANSLATION, NO_NORMALISATION), var: p-->
        <channelDensityNonUniform ionChannel="HCNp" id="HCNp_apical" erev="-30mV" ion="non_specific">
            <variableParameter parameter="condDensity" segmentGroup="apical_group">   
                <inhomogeneousValue inhomogeneousParameter="PathLengthOverDendrites" value="H(500 - p) * H(p - 100) * 6 * (1 + 1.5*p/100)"/> 
            </variableParameter>
        </channelDensityNonUniform>
        <!-- Kdrp with param: gmax = f(p) = H(500 - p) * 3  mS/cm2 on ParameterisedGroup: PathLengthOverDendrites on: dendrite_group with metric: Path Length from root (NO_TRANSLATION, NO_NORMALISATION), var: p-->
        <channelDensityNonUniform ionChannel="Kdrp" id="Kdrp_apical" erev="-90mV" ion="k">
            <variableParameter parameter="condDensity" segmentGroup="apical_group">   
                <inhomogeneousValue inhomogeneousParameter="PathLengthOverDendrites" value="H(500 - p) * 30"/> 
            </variableParameter>
        </channelDensityNonUniform>
        <!-- KvAproxp with param: gmax = f(p) = H(100 - p) * 8 * (1 + p/100) mS/cm2 on ParameterisedGroup: PathLengthOverDendrites on: dendrite_group with metric: Path Length from root (NO_TRANSLATION, NO_NORMALISATION), var: p-->
        <channelDensityNonUniform ionChannel="KvAproxp" id="KvAproxp_apical" erev="-90mV" ion="k">
            <variableParameter parameter="condDensity" segmentGroup="apical_group">   
                <inhomogeneousValue inhomogeneousParameter="PathLengthOverDendrites" value="H(100 - p) * 80 * (1 + p/100)"/> 
            </variableParameter>
        </channelDensityNonUniform>
        <!-- KvAdistp with param: gmax = f(p) = H(500 - p) * H(p - 100) * 8 * (1 + p/100) mS/cm2 on ParameterisedGroup: PathLengthOverDendrites on: dendrite_group with metric: Path Length from root (NO_TRANSLATION, NO_NORMALISATION), var: p-->
        <channelDensityNonUniform ionChannel="KvAdistp" id="KvAdistp_apical" erev="-90mV" ion="k">
            <variableParameter parameter="condDensity" segmentGroup="apical_group">   
                <inhomogeneousValue inhomogeneousParameter="PathLengthOverDendrites" value="H(500 - p) * H(p - 100) * 80 * (1 + p/100)"/> 
            </variableParameter>
        </channelDensityNonUniform>
        <!-- Navapicalp with param: gmax = f(p) = H(500 - p) * 32 mS/cm2 on ParameterisedGroup: PathLengthOverDendrites on: dendrite_group with metric: Path Length from root (NO_TRANSLATION, NO_NORMALISATION), var: p-->
        <channelDensityNonUniform ionChannel="Navapicalp" id="Navapicalp_apical" erev="55mV" ion="na">
            <variableParameter parameter="condDensity" segmentGroup="apical_group">   
                <inhomogeneousValue inhomogeneousParameter="PathLengthOverDendrites" value="H(500 - p) * 320"/> 
            </variableParameter>
        </channelDensityNonUniform>
        
        <spikeThresh value="0mV"/>
        
        <specificCapacitance value="1uF_per_cm2" segmentGroup="soma_group"/>
        <specificCapacitance value="2uF_per_cm2" segmentGroup="dendrite_group"/>
        <specificCapacitance value="1uF_per_cm2" segmentGroup="axon_group"/>
        
        <initMembPotential value="-65.0mV"/>

      </membraneProperties> 

      <intracellularProperties>

        <resistivity value="0.15kohm_cm" segmentGroup="soma_group"/>
        <resistivity value="0.15kohm_cm" segmentGroup="dendrite_group"/>
        <resistivity value="0.05 kohm_cm" segmentGroup="axon_group"/>

      </intracellularProperties>

    </biophysicalProperties>

  </cell> 
 
</neuroml>
